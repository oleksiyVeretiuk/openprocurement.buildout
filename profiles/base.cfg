[buildout]
extensions = mr.developer
package-name =
    openprocurement.api
    openprocurement.auctions.core
    openprocurement.auctions.dgf
    openprocurement.auctions.flash
    openprocurement.auctions.insider
    openprocurement.auctions.lease
    openprocurement.auctions.rubble
    openprocurement.auctions.swiftsure
    openprocurement.auctions.tessel
    openprocurement.auctions.appraisal
    openprocurement.auctions.geb
    openprocurement.bridge.basic
    openprocurement.bridge.contracting
    openprocurement.caravan
    openprocurement.chronograph
    openprocurement.concord
    openprocurement.contracting.ceasefire
    openprocurement.contracting.core
    openprocurement_client
    openregistry.assets.basic
    openregistry.assets.bounce
    openregistry.assets.claimrights
    openregistry.assets.compound
    openregistry.assets.core
    openregistry.concierge
    openregistry.convoy
    openregistry.lots.basic
    openregistry.lots.core
    openregistry.lots.loki
auto-checkout = ${:package-name}
parts =
    chronograph.ini
    circus
    circus.ini
    circusctl
    circusd
    couchdb.ini
    couchpy
    mk_var_dir
    openprocurement.api.ini
    openprocurement.concord
    scripts
eggs =
    chaussette
    redis
    request_id_middleware
    restkit
    retrying
    server_cookie_middleware
    ${:package-name}
find-links =
    http://op:x9W3jZ@dist.quintagroup.com/op/

[scripts]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
interpreter = python
scripts =
    chaussette
    contracting_data_bridge
    ceasefire_loki_caravan

[circus]
recipe = zc.recipe.egg
eggs =
    circus
    circus-web
interpreter =
scripts =
    circus-plugin
    circus-top
    circusd-stats
    circushttpd

[couchpy]
<=circus
eggs = CouchDB
scripts =
    couchpy
    couchdb-replicate

[circusd]
<=circus
initialization =
    sys.argv[1:1] = ('${buildout:directory}/etc/circus.ini').split()
scripts = circusd

[circusctl]
<=circus
initialization =
    sys.argv[1:1] = ('--endpoint ${circus.ini:endpoint}').split()
scripts = circusctl


[logrotate-hourly]
recipe = z3c.recipe.usercrontab
times = @hourly
command = /usr/sbin/logrotate --state ${buildout:directory}/var/logrotate.status ${logrotate.conf:output} >>${buildout:directory}/var/log/logrotate.log 2>&1

[awscli]
recipe = zc.recipe.egg
scripts = aws

[openprocurement.concord]
recipe = zc.recipe.egg
entry-points = concord=openprocurement.concord.daemon:main
arguments = '${openprocurement.api.ini:couchdb_url}', '${openprocurement.api.ini:couchdb_db}', '${buildout:directory}/var/${:_buildout_section_name_}.status', '${buildout:directory}/var/${:_buildout_section_name_}'

[autostart]
recipe = z3c.recipe.usercrontab
times = @reboot
command = ${buildout:directory}/bin/circusd --daemon --pidfile ${buildout:directory}/circus.pid

[mk_var_dir]
recipe = z3c.recipe.mkdir
paths = ${buildout:directory}/var/log/
